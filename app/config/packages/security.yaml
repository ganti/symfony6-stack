security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            custom_authenticator:
                - App\Security\LoginFormAuthenticator
                - App\Security\ApiTokenAuthenticator
            logout:
                path: app_logout
            two_factor:
                    auth_form_path: 2fa_login    # The route name you have used in the routes.yaml
                    check_path: 2fa_login_check  # The route name you have used in the routes.yaml
                    enable_csrf: true
                    trusted_parameter_name: _trusted
                    
            login_throttling:
                max_attempts: 3          # per minute ...
                interval: '1 minutes' # ... or in a custom period


            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
  
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/2fa, role: IS_AUTHENTICATED_2FA_IN_PROGRESS }

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
framework:
    rate_limiter:
        # define 2 rate limiters (one for username+IP, the other for IP)
        username_ip_login:
            policy: token_bucket
            limit: 5
            rate: { interval: '5 minutes' }

        ip_login:
            policy: sliding_window
            limit: 50
            interval: '15 minutes'